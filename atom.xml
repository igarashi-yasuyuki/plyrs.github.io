<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Playlog]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://log.playr.jp/"/>
  <updated>2015-11-20T15:45:53.111Z</updated>
  <id>http://log.playr.jp/</id>
  
  <author>
    <name><![CDATA[Hirofumi]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Webp 導入思案]]></title>
    <link href="http://log.playr.jp/2015/09/14/Webp-%E5%B0%8E%E5%85%A5%E6%80%9D%E6%A1%88/"/>
    <id>http://log.playr.jp/2015/09/14/Webp-導入思案/</id>
    <published>2015-09-13T15:38:44.000Z</published>
    <updated>2015-11-20T15:45:53.111Z</updated>
    <content type="html"><![CDATA[<p>Webpをさくっと導入できないか思案。</p>
<ul>
<li><a href="http://caniuse.com/#search=webp" target="_blank" >Can I use… Support tables for HTML5, CSS3, etc</a></li>
</ul>
<p>取りあえず対応しているのはBlinkブラウザのみだが、モバイル対応へ重きを置くならば価値はありそう。</p>
<ul>
<li><a href="https://1000ch.net/posts/2015/introduction-to-webp.html" target="_blank" >【翻訳】Introduction to WebP - 1000ch.net</a></li>
</ul>
<p>Webpの概要と導入の際の未サポートブラウザへのフォールバック方法を解説。<br>記事内でも言及があるサーバーサイドでの実装が一番よさそうではある。</p>
<ul>
<li><a href="https://www.igvita.com/2013/05/01/deploying-webp-via-accept-content-negotiation/" target="_blank" >Deploying WebP via Accept Content Negotiation - igvita.com</a></li>
</ul>
<p>しかしサクっとはできなさそうなので、フロントで実装したい。<br>とりあえず上記を参考に<code>&lt;picture&gt;</code>で試してみた。</p>
<ul>
<li><a href="http://ground.playr.jp/webp/" target="_blank" >Webp - Playground</a></li>
</ul>
<p>これは容易でとてもいい方法だと感じた。<br>しかし今回は<code>background-image</code>へのwebp導入を考えているので残念ながらこの方法は不可である。</p>
<p>色々調べると‘@supports‘を利用した方法を発見。</p>
<ul>
<li><a href="https://andywalpole.me/#!/blog/142790/using-webp-image-format" target="_blank" >Using the WebP image format / blog unblock</a></li>
</ul>
<p><code>@supports</code>で機能が利用できるか確認し、分岐する手法が紹介されている。<br>筆者は最終的にModernizrを使用したようだが(そりゃそうだよな…)、今回このためにModernizr入れるのは本末転倒である。<br><code>@supports</code>面白そうだしカジュアルなのでコレを採用。</p>
<ul>
<li><a href="https://developer.mozilla.org/ja/docs/Web/CSS/@supports" target="_blank" >@supports - CSS | MDN</a></li>
<li><a href="http://caniuse.com/#feat=css-featurequeries" target="_blank" >Can I use… Support tables for HTML5, CSS3, etc</a></li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">background-image: url("../img/bg.png");</span><br><span class="line">@supports (background-image: -webkit-image-set(url("../img/bg.webp") 1x)) &#123;</span><br><span class="line">  background-image: -webkit-image-set(url("../img/bg.webp") 1x)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><a href="http://caniuse.com/#feat=css-image-set" target="_blank" >Can I use… Support tables for HTML5, CSS3, etc</a></li>
</ul>
<p>CSS4で提案されているimage-listはかなりよさそうである。</p>
<ul>
<li><a href="http://www.w3.org/TR/css4-images/" target="_blank" >CSS Image Values and Replaced Content Module Level 4</a></li>
<li><a href="http://www.brucelawson.co.uk/2013/save-bandwidth-webp-with-fallback/" target="_blank" >Bruce Lawson’s personal site  : Save bandwidth with webP – soon with fallback!</a></li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">background-image: images("../img/bg.webp", "../img/bg.png");</span><br></pre></td></tr></table></figure>
<p>ただ現時点では対応しているブラウザはない様子。<br>現時点ではimage-setが一番よさそう。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Webpをさくっと導入できないか思案。</p>
<ul>
<li><a href="http://caniuse.com/#search=webp" target="_blank" >Can I use… Support tables for HTML5, CSS3, et]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[MongoDBのバックアップ思案]]></title>
    <link href="http://log.playr.jp/2015/09/11/MongoDB%E3%81%AE%E3%83%90%E3%83%83%E3%82%AF%E3%82%A2%E3%83%83%E3%83%97%E6%80%9D%E6%A1%88/"/>
    <id>http://log.playr.jp/2015/09/11/MongoDBのバックアップ思案/</id>
    <published>2015-09-10T15:32:31.000Z</published>
    <updated>2015-11-20T15:34:33.706Z</updated>
    <content type="html"><![CDATA[<p>MongoDBをバックアップし、リストアまで行いたい。</p>
<p><a href="http://gihyo.jp/dev/serial/01/mongodb/0011" target="_blank" >第11回　MongoDBのバックアップ：MongoDBでゆるふわDB体験｜gihyo.jp … 技術評論社</a></p>
<h2 id="バックアップ">バックアップ</h2><p>起動中のMongoのバックアップには<code>mongodump</code>が一般的のよう。<br>小規模ならこれで十分か。</p>
<p><a href="http://docs.mongodb.org/manual/reference/program/mongodump/" target="_blank" >mongodump — MongoDB Manual 3.0</a></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mongodump --out /opt/backup/mongodump_20150911</span><br></pre></td></tr></table></figure>
<p><code>out</code>オプションで保存先を指定できる。指定しなかったらカレントディレクトへ。<br>そのなかにデータベースごとのダンプファイルを作成してくれる。</p>
<h2 id="リストア">リストア</h2><p>リストアは<code>mongorestore</code>で。</p>
<p><a href="http://docs.mongodb.org/manual/reference/program/mongorestore/" target="_blank" >mongorestore — MongoDB Manual 3.0</a></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mongorestore /tmp/path</span><br></pre></td></tr></table></figure>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mongorestore /tmp/path -d <span class="property">name</span></span><br></pre></td></tr></table></figure>
<p>でデータベースを指定</p>
<p>とりあえず上の方法で手動でのバックアップ&amp;リストアは問題なく、軽快にできた。<br>今後は自動化していきたい。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>MongoDBをバックアップし、リストアまで行いたい。</p>
<p><a href="http://gihyo.jp/dev/serial/01/mongodb/0011" target="_blank" >第11回　MongoDBのバックアップ：MongoDBでゆるふわ]]>
    </summary>
    
      <category term="MongoDB" scheme="http://log.playr.jp/tags/MongoDB/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Node.js 4.0]]></title>
    <link href="http://log.playr.jp/2015/09/09/Node-js-4-0/"/>
    <id>http://log.playr.jp/2015/09/09/Node-js-4-0/</id>
    <published>2015-09-09T13:29:39.000Z</published>
    <updated>2015-11-20T15:31:17.066Z</updated>
    <content type="html"><![CDATA[<p>Node.jsの4.0がリリースされたようなので、順次アプリケーションを移行中。</p>
<p><a href="https://nodejs.org/en/blog/release/v4.0.0/" target="_blank" >Node v4.0.0 (Stable) | Node.js</a></p>
<p>問題なく<code>nvm install 4.0</code>でインスコできるよう。</p>
<p>Arrow Functionが解禁になったので、これも少しずつ書き換えていきたい。</p>
<p>あとはletとconstの使い分け。基本constでいこうと思うけど、どうだろう。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Node.jsの4.0がリリースされたようなので、順次アプリケーションを移行中。</p>
<p><a href="https://nodejs.org/en/blog/release/v4.0.0/" target="_blank" >Node v4.0.0 (Stable]]>
    </summary>
    
      <category term="Node.js" scheme="http://log.playr.jp/tags/Node-js/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Grid]]></title>
    <link href="http://log.playr.jp/2015/09/07/Grid/"/>
    <id>http://log.playr.jp/2015/09/07/Grid/</id>
    <published>2015-09-07T12:05:05.000Z</published>
    <updated>2015-11-20T15:26:09.222Z</updated>
    <content type="html"><![CDATA[<p>グリッドデザインの流れにある「カード型デザイン」の記事を読んだ。</p>
<ul>
<li><a href="http://photoshopvip.net/archives/81206" target="_blank" >最新Webトレンド「カード型デザイン」を取り入れるべき、効果的な4つの理由 - PhotoshopVIP</a></li>
</ul>
<p>ポイントは</p>
<ul>
<li>IAの作成</li>
<li>UXの工場</li>
<li>普遍性</li>
</ul>
<p>の3点。</p>
<p>この手のデザインは割とまえからある気がするが、スマホデバイスとの親和性と相まって地位を確立した感じであろうか。</p>
<h2 id="CSS_Grid_Layouts">CSS Grid Layouts</h2><p>今後がっつりとしたグリッドデザインをマークアップするのであれば、<code>display: grid</code>を使用したい。</p>
<ul>
<li><a href="https://medium.com/@patrickbrosset/css-grid-layout-6c9cba6e8a5a" target="_blank" >The future of layout with CSS: Grid Layouts — Medium</a></li>
</ul>
<p>CSSグリッドを使用した実装。</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="class">.container</span> <span class="rules">&#123; <span class="rule"><span class="attribute">display</span>:<span class="value"> grid</span></span>; &#125;</span></span><br></pre></td></tr></table></figure>
<ul>
<li><a href="http://caniuse.com/#feat=css-grid" target="_blank" >Can I use… Support tables for HTML5, CSS3, etc</a></li>
</ul>
<p>各ブラウザベンダーの対応はまだまだこれから。IEも先行実装したものの使用が変わっていき、互換性が怪しいらしい。<br>とりあえずDemoを作ってみた。</p>
<ul>
<li><a href="http://ground.playr.jp/css-grid-layout/" target="_blank" >CSS Grid Layout - Playground</a></li>
</ul>
<p>ie11とEdgeで動作を確認。<br>他のブラウザではDivの羅列となったので導入するのであればPolyfillは必須のよう。</p>
<ul>
<li><a href="https://github.com/FremyCompany/css-grid-polyfill" target="_blank" >FremyCompany/css-grid-polyfill</a></li>
</ul>
<p>Polyfillはコレ。Demoもあるし</p>
<p>かなり容易に複雑なグリッドレイアウトを作れるし、レスポンシブ化も簡潔に書けそう。<br>早く使いたいので各ベンダの今後の動向を見たい。現時点では未対応環境が多すぎるし、上記Polyfill内でもプロダクションへの導入は慎重にと言及されている。<br>でもFirefoxが対応したらPolyfillかましてどこかで使うかも。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>グリッドデザインの流れにある「カード型デザイン」の記事を読んだ。</p>
<ul>
<li><a href="http://photoshopvip.net/archives/81206" target="_blank" >最新Webトレンド「カード型デザイン」を取り入れる]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[Prefitch]]></title>
    <link href="http://log.playr.jp/2015/09/07/Prefitch/"/>
    <id>http://log.playr.jp/2015/09/07/Prefitch/</id>
    <published>2015-09-07T11:03:17.000Z</published>
    <updated>2015-11-20T15:04:10.513Z</updated>
    <content type="html"><![CDATA[<p>来訪者が高い可能性で次に読み込むファイルを先読みさせたい。</p>
<p><a href="https://medium.com/@luisvieira_gmr/html5-prefetch-1e54f6dda15d" target="_blank" >HTML5 Prefetch — Medium</a></p>
<p>対応ブラウザやテスト方法など、かなり詳しく解説している記事。</p>
<p>種類は主に以下の四つがあるよう。</p>
<ul>
<li>dns-prefetch – ドメインの名前解決</li>
<li>subresource – 現在のページで使用するファイルをキャッシュ</li>
<li>prefetch – 後続のページで使用するファイルをキャッシュ</li>
<li>prerender – バックグラウンドでレンダリングまで行う</li>
</ul>
<p>今回は<code>prefetch</code>を試してみた。</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">link</span> <span class="attribute">rel</span>=<span class="value">”prefetch”</span> <span class="attribute">href</span>=<span class="value">”</span>/<span class="attribute">js</span>/<span class="attribute">example.js</span>”&gt;</span></span><br></pre></td></tr></table></figure>
<p>効果のほどは今後検証していく。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>来訪者が高い可能性で次に読み込むファイルを先読みさせたい。</p>
<p><a href="https://medium.com/@luisvieira_gmr/html5-prefetch-1e54f6dda15d" target="_blank" >HTML5 Pref]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[Web Manifest]]></title>
    <link href="http://log.playr.jp/2015/09/02/Web-Manifest/"/>
    <id>http://log.playr.jp/2015/09/02/Web-Manifest/</id>
    <published>2015-09-02T14:45:58.000Z</published>
    <updated>2015-11-20T15:00:41.795Z</updated>
    <content type="html"><![CDATA[<h2 id="manifest-json">manifest.json</h2><p>サイトのWebアプリ化を押し進めるためmanifest.jsonを設置。</p>
<ul>
<li><a href="https://w3c.github.io/manifest/" target="_blank" >Manifest for a web application</a></li>
<li><a href="https://developer.mozilla.org/en-US/Apps/Build/Manifest" target="_blank" >App manifest - App Center | MDN</a></li>
</ul>
<p>MDNにも記事があるし、普段使いのFirefoxでもしっかり動くのだろうか。</p>
<ul>
<li><a href="http://googledevjp.blogspot.jp/2015/04/service-worker-google-developers-summit.html" target="_blank" >Service Worker で作る 最新モバイル ウェブ エクスペリエンス - Google Developers Summit まとめ </a></li>
</ul>
<p>上記はモバイルフレンドリーの目線でWebアプリ化に幅広く言及している記事。</p>
<ul>
<li><a href="http://moonglows76.tumblr.com/post/102930578463/web%E3%82%A2%E3%83%97%E3%83%AA%E3%82%92%E3%83%8D%E3%82%A4%E3%83%86%E3%82%A3%E3%83%96%E3%82%A2%E3%83%97%E3%83%AA%E3%81%A3%E3%81%BD%E3%81%8F%E8%B5%B7%E5%8B%95%E3%81%99%E3%82%8Bwebapp-manifest" target="_blank" >Webアプリをネイティブアプリっぽく起動するWebApp Manifest - Coding Design’s Tumblr</a></li>
</ul>
<p>この記事はさっと読めて、参考になる。</p>
<p>manifest.json<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  "<span class="attribute">name</span>": <span class="value"><span class="string">"Kinlan's Amazing Application ++"</span></span>,</span><br><span class="line">  "<span class="attribute">short_name</span>": <span class="value"><span class="string">"Kinlan's Amaze App"</span></span>,</span><br><span class="line">  "<span class="attribute">icons</span>": <span class="value">[</span><br><span class="line">    &#123;</span><br><span class="line">      "<span class="attribute">src</span>": <span class="value"><span class="string">"launcher-icon-3x.png"</span></span>,</span><br><span class="line">      "<span class="attribute">sizes</span>": <span class="value"><span class="string">"144x144"</span></span>,</span><br><span class="line">      "<span class="attribute">type</span>": <span class="value"><span class="string">"image/png"</span></span><br><span class="line">    </span>&#125;</span><br><span class="line">  ]</span>,</span><br><span class="line">  "<span class="attribute">start_url</span>": <span class="value"><span class="string">"index.html"</span></span>,</span><br><span class="line">  "<span class="attribute">display</span>": <span class="value"><span class="string">"standalone"</span></span><br><span class="line"></span>&#125;</span><br></pre></td></tr></table></figure></p>
<p>これが最低限必要な項目らしい。</p>
<p>index.html<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">link</span> <span class="attribute">rel</span>=<span class="value">"manifest"</span> <span class="attribute">href</span>=<span class="value">"/manifest.json"</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>あとはヘッドで読み込めばオケ。</p>
<h2 id="インストールバナー">インストールバナー</h2><ul>
<li><a href="http://qiita.com/tmtysk/items/2c5da83feec45b4ee36f" target="_blank" >manifest.json でWebアプリを「ホーム画面に追加」自動バナー表示に対応させる</a></li>
</ul>
<p>これはService Workerを使用した「ホームへ追加」バナーの表示の記事。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">'load'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="string">'serviceWorker'</span> <span class="keyword">in</span> navigator) &#123;</span><br><span class="line">    navigator.serviceWorker.register(<span class="string">'/sw.js'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>これもインストールバナーについて詳しく解説している記事。</p>
<p><a href="https://developers.google.com/web/updates/2015/03/increasing-engagement-with-app-install-banners-in-chrome-for-android" target="_blank" >Increasing engagement with Web App install banners — Google Web Updates</a></p>
<p>そしてそのサンプル。</p>
<p><a href="https://github.com/GoogleChrome/samples/tree/gh-pages/app-install-banner" target="_blank" >samples/app-install-banner at gh-pages · GoogleChrome/samples</a></p>
<p>Choromeでは問題なく動作し、インストールバナーも表示された。<br>ただ一度インストールをしないを選択すると、次回再表示はなさそうなのであまり強力な効果は期待できないかも。</p>
<h2 id="テーマカラー">テーマカラー</h2><p>theme-colorの設定がmanifest.json内に記述できるようになったよう。</p>
<ul>
<li><a href="https://developers.google.com/web/updates/2015/09/using-manifest-to-set-sitewide-theme-color" target="_blank" >Using the web app manifest to specify a site wide theme colour</a></li>
</ul>
<p>従来のmetaタグだとこう。</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">meta</span> <span class="attribute">name</span>=<span class="value">"theme-color"</span> <span class="attribute">content</span>=<span class="value">"#2196F3"</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>manifest.jsonだとこう。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">"theme_color": "#2196F3"</span><br></pre></td></tr></table></figure>
<p>しかしmanifest.jsonのみの記述だとホームへ追加しないと効力を発揮しないようなので、現時点では両方記述したほうがいいかもしれない。</p>
<h2 id="Firefox">Firefox</h2><p>FirefoxでもServiceWorkerをテストする。</p>
<p><code>about:config</code>で<code>dom.serviceWorkers</code>を検索し、フラグを<code>true</code>へ変更する。</p>
<p>ServiceWorkerは問題なく作動したが、アプリ化の効果は現時点では無さそう。今後に期待したい。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="manifest-json">manifest.json</h2><p>サイトのWebアプリ化を押し進めるためmanifest.jsonを設置。</p>
<ul>
<li><a href="https://w3c.github.io/manifest/" targ]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[フォントコンバーター]]></title>
    <link href="http://log.playr.jp/2015/09/02/%E3%83%95%E3%82%A9%E3%83%B3%E3%83%88%E3%82%B3%E3%83%B3%E3%83%90%E3%83%BC%E3%82%BF%E3%83%BC/"/>
    <id>http://log.playr.jp/2015/09/02/フォントコンバーター/</id>
    <published>2015-09-02T09:45:30.000Z</published>
    <updated>2015-11-16T04:03:01.574Z</updated>
    <content type="html"><![CDATA[<p>サイトへWebフォントを導入する際の手順。</p>
<p>フォントの変換は<a href="http://www.fontconverter.org/en.html" target="_blank" >Font Converter</a>で、Woff2へは<a href="https://everythingfonts.com/woff-to-woff2" target="_blank" >woff to woff2 converter</a>で行える。</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="at_rule">@<span class="keyword">font-face</span></span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">font-family</span>:<span class="value"> <span class="string">'webfont'</span></span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">src</span>:<span class="value"><span class="function">url</span>(<span class="string">'font/webfont.eot'</span>)</span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">src</span>:<span class="value"><span class="function">url</span>(<span class="string">'font/webfont.eot?#iefix'</span>) <span class="function">format</span>(<span class="string">'embedded-opentype'</span>),</span><br><span class="line">      <span class="function">url</span>(<span class="string">'font/webfont.woff2'</span>) <span class="function">format</span>(<span class="string">'woff2'</span>)</span><br><span class="line">      <span class="function">url</span>(<span class="string">'font/webfont.woff'</span>) <span class="function">format</span>(<span class="string">'woff'</span>),</span><br><span class="line">      <span class="function">url</span>(<span class="string">'font/webfont.ttf'</span>) <span class="function">format</span>(<span class="string">'truetype'</span>),</span><br><span class="line">      <span class="function">url</span>(<span class="string">'font/webfont.svg#icomoon'</span>) <span class="function">format</span>(<span class="string">'svg'</span>)</span></span>;</span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure>
<p>IE8以下の対応はもういいかなとも思う。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>サイトへWebフォントを導入する際の手順。</p>
<p>フォントの変換は<a href="http://www.fontconverter.org/en.html" target="_blank" >Font Converter</a>で、Woff2へは<a href="]]>
    </summary>
    
      <category term="css" scheme="http://log.playr.jp/tags/css/"/>
    
      <category term="webfont" scheme="http://log.playr.jp/tags/webfont/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Firefox 64bit]]></title>
    <link href="http://log.playr.jp/2015/08/17/Firefox-64bit/"/>
    <id>http://log.playr.jp/2015/08/17/Firefox-64bit/</id>
    <published>2015-08-17T11:36:38.000Z</published>
    <updated>2015-11-16T03:44:02.156Z</updated>
    <content type="html"><![CDATA[<p>BetaとDeveloper Edition(Aurora)では64bit版が使えるようなので、導入してみた。</p>
<ul>
<li><a href="https://www.mozilla.org/ja/firefox/beta/all/" target="_blank" >Firefox Beta</a></li>
<li><a href="https://www.mozilla.org/ja/firefox/developer/all/" target="_blank" >Firefox Developer Edition</a></li>
</ul>
<p>Developer Editionはたまにしか使わないのでよくわからないが、常用しているBetaはいい感じ。　　<br>思ったより快適でメモリもまだ余裕があるので、マシンスペックによっては幸せになれるかと。</p>
<p>ついでにChromeも64bitへ上げたが、これこそ僕は検証でしか使用しないので違いは分からず。<br>でも、きっとよくなってると思う。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>BetaとDeveloper Edition(Aurora)では64bit版が使えるようなので、導入してみた。</p>
<ul>
<li><a href="https://www.mozilla.org/ja/firefox/beta/all/" target="_blan]]>
    </summary>
    
      <category term="Firefox" scheme="http://log.playr.jp/tags/Firefox/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Source Han Code JP]]></title>
    <link href="http://log.playr.jp/2015/08/12/Source-Han-Code-JP/"/>
    <id>http://log.playr.jp/2015/08/12/Source-Han-Code-JP/</id>
    <published>2015-08-12T08:26:21.000Z</published>
    <updated>2015-11-16T03:36:14.741Z</updated>
    <content type="html"><![CDATA[<p>最近はずっとSource Code Proを使っていたんだけど、ものは試しとSource Han Code JPを味見してみた。  </p>
<p><a href="https://github.com/adobe-fonts/source-han-code-jp" target="_blank" >adobe-fonts/source-han-code-jp</a>  </p>
<p><a href="http://blog.quusookagaku.com/19595" target="_blank" >この記事</a>を参考にBracketsへ導入。<br>(やっぱりすんなりとはいかなかった…)  </p>
<figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">'Source Han Code jp Medium', ＭＳ ゴシック, '<span class="keyword">MS</span> <span class="title">Gothic</span>', monospace</span><br></pre></td></tr></table></figure>
<p>僕の環境では上記の用に記述すると動いた。<br>ウェイトをもっと細くしたいが、Medium以外は認識しない…。</p>
<p>最初は結構違和感を感じてフォントサイズなどの微調整は必要だったけど、結果としてはなかなか、いい塩梅。<br>日本語が入り乱れてるファイルの作業では効力を発揮しそうなので、今後はこれメインでいってみようかと。<br>フロント向きだと感じた。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>最近はずっとSource Code Proを使っていたんだけど、ものは試しとSource Han Code JPを味見してみた。  </p>
<p><a href="https://github.com/adobe-fonts/source-han-code-jp" tar]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[Windows10へVagrantを導入]]></title>
    <link href="http://log.playr.jp/2015/08/10/Windows10%E3%81%B8Vagrant%E3%82%92%E5%B0%8E%E5%85%A5/"/>
    <id>http://log.playr.jp/2015/08/10/Windows10へVagrantを導入/</id>
    <published>2015-08-10T11:03:31.000Z</published>
    <updated>2015-11-16T03:25:01.502Z</updated>
    <content type="html"><![CDATA[<p>Wordpressなどの開発はXamppで十分だが、Nodeを本格的にWindows上で行うのはきつい。<br>というか本番環境がWindowsならまだいいかもしれないが、現実はほとんどそうではないので仮想環境上で開発すべきであろう。<br>Windows10へアップグレードしたのを機会に、前々から検討していたVagrantでの開発環境導入を試みる。 </p>
<h2 id="事前作業">事前作業</h2><h3 id="Virtualization_Technologyを有効にする">Virtualization Technologyを有効にする</h3><p>Vagrantは仮想環境を使用するため、Virtualization Technologyを有効にする必要がある。<br>PCのBIOSに入り、<code>Virtualization Technology</code> を <code>Enabled</code> へ  </p>
<h3 id="Vagrant、VirtualBoxをインストール">Vagrant、VirtualBoxをインストール</h3><p>各公式サイトから最新版をダウンロードし、インスコ。</p>
<p>Vagrant 公式サイト<br><a href="http://www.vagrantup.com/" target="_blank" >http://www.vagrantup.com/</a>  </p>
<p>VirtualBox<br><a href="https://www.virtualbox.org/" target="_blank" >https://www.virtualbox.org/</a>  </p>
<h3 id="BOXを取得">BOXを取得</h3><p>配布サイトから必要なBoxを吟味。<br>今回はCentOS v6.6 64bit。  </p>
<p>Vagrantbox.es<br><a href="http://www.vagrantbox.es/" target="_blank" >http://www.vagrantbox.es/</a>  </p>
<h3 id="CentOS_6-6_64bit_を追加">CentOS 6.6 64bit を追加</h3><p>ここからコマンドプロンプト</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vagrant box add centos6.<span class="number">6</span> http://sourceforge.net/projects/nrel-vagrant-boxes/files/CentOS-<span class="number">6.6</span>-x86_64-v20150426.box</span><br></pre></td></tr></table></figure>
<h3 id="追加したBoxを確認">追加したBoxを確認</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vagrant box list</span><br></pre></td></tr></table></figure>
<h2 id="Vagrant_初期化">Vagrant 初期化</h2><p>ここからコマンドプロンプト on 作業フォルダ</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vagrant init centos6.<span class="number">6</span></span><br></pre></td></tr></table></figure>
<h2 id="仮想マシンの操作">仮想マシンの操作</h2><h3 id="起動">起動</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vagrant up</span><br></pre></td></tr></table></figure>
<h3 id="状態確認">状態確認</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vagrant status</span><br></pre></td></tr></table></figure>
<h3 id="終了">終了</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vagrant halt</span><br></pre></td></tr></table></figure>
<h3 id="再起動">再起動</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vagrant reload</span><br></pre></td></tr></table></figure>
<h3 id="破棄">破棄</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vagrant destroy</span><br></pre></td></tr></table></figure>
<h2 id="仮想マシンへ接続">仮想マシンへ接続</h2><p>TeraTermで接続した。</p>
<h3 id="git_インストール">git インストール</h3><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum -y <span class="keyword">install</span> git</span><br></pre></td></tr></table></figure>
<h3 id="Node-js_インストール">Node.js インストール</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/creationix/nvm.git ~/.nvm</span><br><span class="line">$ <span class="built_in">source</span> ~/.nvm/nvm.sh</span><br><span class="line">$ nvm install <span class="number">0.12</span></span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install --no-bin-links</span><br></pre></td></tr></table></figure>
<h3 id="ファイアーウォールを停止">ファイアーウォールを停止</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo service iptables stop</span><br><span class="line">$ sudo chkconfig iptables off</span><br></pre></td></tr></table></figure>
<h3 id="雑感">雑感</h3><p>Windows10でも今回は問題はなかったが、環境やVirtualBoxのバージョンによっては不具合も報告されているようなのでもうちょっと待ったほうが安全かもしれない。<br>Vagrantを開発環境として本格運用していくならイメージの保存や構成管理ツールも合わせるのが楽っぽいので、順次導入していきたい。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Wordpressなどの開発はXamppで十分だが、Nodeを本格的にWindows上で行うのはきつい。<br>というか本番環境がWindowsならまだいいかもしれないが、現実はほとんどそうではないので仮想環境上で開発すべきであろう。<br>Windows10へアップグレー]]>
    </summary>
    
      <category term="Vagrant" scheme="http://log.playr.jp/tags/Vagrant/"/>
    
      <category term="Windows" scheme="http://log.playr.jp/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[CSS wii-change]]></title>
    <link href="http://log.playr.jp/2015/08/05/wii-change%E3%83%97%E3%83%AD%E3%83%91%E3%83%86%E3%82%A3/"/>
    <id>http://log.playr.jp/2015/08/05/wii-changeプロパティ/</id>
    <published>2015-08-05T11:37:01.000Z</published>
    <updated>2015-11-16T03:00:29.734Z</updated>
    <content type="html"><![CDATA[<p>CSS will-changeプロパティについての記事を読んだので早速試験中。</p>
<ul>
<li><a href="https://dev.opera.com/articles/ja/css-will-change-property/" target="_blank" >CSS will-changeプロパティについて知っておくべきこと</a></li>
</ul>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">will-change</span>: <span class="tag">transform</span>;</span><br></pre></td></tr></table></figure>
<p>簡単に言えば<code>translate3ds</code>などのハックでGPUアクセレーションを有効化していたけど、それ以外の適切な手法でブラウザさんに最適化していただこうというものらしい。</p>
<p>ちょっと試してみてもあまり違いはわからなかったが、重い描画や低スペックマシンだと違いがでてくるのかも。<br>何より最適化の意図を明確にすることができるので、設計に盛り込みやすい。</p>
<ul>
<li><a href="http://caniuse.com/#feat=will-change" target="_blank" >Can I use… Support tables for HTML5, CSS3, etc</a></li>
</ul>
<p>しかし現時点でSafariの実装はまだまだなので、しばらくは従来通り<code>translate3ds</code>を使うか、併用していくのがよさそう。</p>
<p>その他参考記事</p>
<ul>
<li><a href="https://developer.mozilla.org/ja/docs/Web/CSS/will-change" target="_blank" >will-change - CSS | MDN</a></li>
<li><a href="https://css-tricks.com/almanac/properties/w/will-change/" target="_blank" >will-change | CSS-Tricks</a></li>
<li><a href="http://www.hcn.zaq.ne.jp/___/WEB/css-will-change-ja.html" target="_blank" >CSS Will Change Module Level 1 日本語訳</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>CSS will-changeプロパティについての記事を読んだので早速試験中。</p>
<ul>
<li><a href="https://dev.opera.com/articles/ja/css-will-change-property/" target="_blank]]>
    </summary>
    
      <category term="css" scheme="http://log.playr.jp/tags/css/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[npm-check-updates]]></title>
    <link href="http://log.playr.jp/2015/06/11/npm-check-updates/"/>
    <id>http://log.playr.jp/2015/06/11/npm-check-updates/</id>
    <published>2015-06-11T11:36:08.000Z</published>
    <updated>2015-10-03T07:51:52.000Z</updated>
    <content type="html"><![CDATA[<p><a href="https://github.com/tjunnone/npm-check-updates" target="_blank" >npm-check-updates</a>が便利という発見。</p>
<p>モジュールのリリース情報を確認して、必要ならば更新というくだりは難儀。<br><code>npm outdated</code>してpackage.jsonを書き換えて<code>npm install</code>を行うのが通常の流れであるが、回数を重ねるとこれを行うのがおっくうになってくる。</p>
<p>npm-check-updatesはこのへんの手間を省いてくれる。</p>
<p>今回はコマンドが短くてよりよさげな開発版をインストール。</p>
<figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">npm</span> install -g <span class="built_in">npm</span>-check-updates<span class="property">@unstable</span></span><br></pre></td></tr></table></figure>
<p>これで更新確認から実行まで3ステップで行える。</p>
<figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 更新を確認</span></span><br><span class="line"><span class="variable">$ </span>ncu</span><br><span class="line"></span><br><span class="line"><span class="comment"># package.jsonを更新</span></span><br><span class="line"><span class="variable">$ </span>ncu -u</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新を実行</span></span><br><span class="line"><span class="variable">$ </span>npm install</span><br></pre></td></tr></table></figure>
<p>フロント開発でgulpを使用していると割と頻繁にupdateする必要がある。</p>
<p>マイナーバージョンアップであればあまり後先考えずガンガン上げていきたい性分なので、その作業の簡略化ができ素晴らしい。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="https://github.com/tjunnone/npm-check-updates" target="_blank" >npm-check-updates</a>が便利という発見。</p>
<p>モジュールのリリース情報を確認して、必要ならば更新と]]>
    </summary>
    
      <category term="npm" scheme="http://log.playr.jp/tags/npm/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[gulp-imagemin]]></title>
    <link href="http://log.playr.jp/2015/05/25/gulp-imagemin/"/>
    <id>http://log.playr.jp/2015/05/25/gulp-imagemin/</id>
    <published>2015-05-25T11:28:08.000Z</published>
    <updated>2015-10-03T07:35:32.000Z</updated>
    <content type="html"><![CDATA[<p>gulp-imageminで画像の最適化を突き詰める。</p>
<p><a href="https://github.com/sindresorhus/gulp-imagemin" target="_blank" >sindresorhus/gulp-imagemin</a></p>
<h2 id="標準API">標準API</h2><ul>
<li>gifsicle</li>
<li>jpegtran</li>
<li>optipng</li>
<li>svgo</li>
</ul>
<p>gif、jpeg、png、svgと主要なフォーマットは標準搭載されているので、導入後すぐに試すことができる。</p>
<h2 id="拡張モジュール">拡張モジュール</h2><ul>
<li><a href="https://github.com/imagemin/imagemin-webp" target="_blank" >webp</a></li>
<li><a href="https://github.com/imagemin/imagemin-advpng" target="_blank" >advpng</a></li>
<li><a href="https://github.com/imagemin/imagemin-pngquant" target="_blank" >pngquant</a></li>
<li><a href="https://github.com/imagemin/imagemin-pngout" target="_blank" >pngout</a></li>
<li><a href="https://github.com/imagemin/imagemin-pngcrush" target="_blank" >pngcrush</a></li>
<li><a href="https://github.com/imagemin/imagemin-mozjpeg" target="_blank" >mozjpeg</a></li>
<li><a href="https://github.com/imagemin/imagemin-jpegoptim" target="_blank" >jpegoptim</a></li>
</ul>
<p>拡張モジュールを用いることも可能。<br>webpなども最適化することができる。<br>全てを試してはいないが、pngquantやmozjpegは標準搭載のそれよりも圧縮効率がいい。</p>
<p>ただ、モジュールがでかくてインストールに時間がかかる。<br>各プロジェクトにこれを導入していくと、なぜか申し訳ない気持ちになってくる。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>gulp-imageminで画像の最適化を突き詰める。</p>
<p><a href="https://github.com/sindresorhus/gulp-imagemin" target="_blank" >sindresorhus/gulp-imagemin</a]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[Style Guide Boilerplate]]></title>
    <link href="http://log.playr.jp/2015/05/21/Style-Guide-Boilerplate/"/>
    <id>http://log.playr.jp/2015/05/21/Style-Guide-Boilerplate/</id>
    <published>2015-05-21T11:24:23.000Z</published>
    <updated>2015-10-03T07:27:02.000Z</updated>
    <content type="html"><![CDATA[<p>Style Guide Boilerplateがいい感じ。</p>
<ul>
<li><a href="http://bjankord.github.io/Style-Guide-Boilerplate/" target="_blank" >bjankord/Style-Guide-Boilerplate</a></li>
</ul>
<p>DoccoとかKSSとか、ジェネレーターを使った運用を目指していたが、生成するドキュメントがいまいちシンプルさに欠け、結局自前で書いていたが、こーゆーのが今回はマッチしそう。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Style Guide Boilerplateがいい感じ。</p>
<ul>
<li><a href="http://bjankord.github.io/Style-Guide-Boilerplate/" target="_blank" >bjankord/Style-G]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[node-redis入門]]></title>
    <link href="http://log.playr.jp/2015/05/17/node-redis%E5%85%A5%E9%96%80/"/>
    <id>http://log.playr.jp/2015/05/17/node-redis入門/</id>
    <published>2015-05-17T11:07:18.000Z</published>
    <updated>2015-10-03T07:52:34.000Z</updated>
    <content type="html"><![CDATA[<p>Redisの修行を進めている。<br>Nodeアプリ内で使う分には下記を参考に学習を進めていけばいい様子。</p>
<ul>
<li><a href="http://redis.io/" target="_blank" >http://redis.io/</a></li>
<li><a href="https://github.com/mranney/node_redis" target="_blank" >mranney/node_redis</a></li>
<li><a href="http://nodejs.osser.jp/node/node-redis/" target="_blank" >node-redis - node.js redisクライアント</a></li>
<li><a href="http://yutapon.hatenablog.com/entry/2013/07/07/011645" target="_blank" >node.jsでRedisを使ってみる【準備編】</a></li>
</ul>
<p>やはりセッション管理などはRedisで行いたい。<br>Koaでは<a href="https://github.com/koajs/koa-redis" target="_blank" >koa-redis</a>を使えば容易に実装できた。</p>
<p>よりRedisをよりアプリケーションの広範囲で活用する際は下記で理解を深めるとよさそう。</p>
<ul>
<li><a href="http://redis-documentasion-japanese.readthedocs.org/ja/latest/topics/data-types-intro.html" target="_blank" >入門 : Redis のデータ構造と概念 — Redis Documentation (Japanese Translation)</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>Redisの修行を進めている。<br>Nodeアプリ内で使う分には下記を参考に学習を進めていけばいい様子。</p>
<ul>
<li><a href="http://redis.io/" target="_blank" >http://redis.io/</a></li>
]]>
    </summary>
    
      <category term="Koa" scheme="http://log.playr.jp/tags/Koa/"/>
    
      <category term="Node.js" scheme="http://log.playr.jp/tags/Node-js/"/>
    
      <category term="Redis" scheme="http://log.playr.jp/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[http-proxyでNode.jsの複数アプリを管理]]></title>
    <link href="http://log.playr.jp/2015/05/17/http-proxy%E3%81%A7Node-js%E3%81%AE%E8%A4%87%E6%95%B0%E3%82%A2%E3%83%97%E3%83%AA%E3%82%92%E7%AE%A1%E7%90%86/"/>
    <id>http://log.playr.jp/2015/05/17/http-proxyでNode-jsの複数アプリを管理/</id>
    <published>2015-05-17T11:00:15.000Z</published>
    <updated>2015-10-03T07:52:22.000Z</updated>
    <content type="html"><![CDATA[<p>一つのドメインで複数のnodeアプリを起動させたい。</p>
<p>http-proxy使えばできそうである。</p>
<blockquote>
<p><a href="https://github.com/nodejitsu/node-http-proxy" target="_blank" >nodejitsu/node-http-proxy</a></p>
</blockquote>
<h2 id="参考">参考</h2><blockquote>
<p><a href="http://nerdpress.org/2012/04/20/hosting-multiple-express-node-js-apps-on-port-80/" target="_blank" >Hosting multiple Express (node.js) apps on port 80</a><br><a href="http://d.hatena.ne.jp/sasaplus1/20130124/1358992547" target="_blank" >http-proxyでプロキシAdd Star</a></p>
</blockquote>
<p>別モジュールを利用しているが、PM2のくだりが参考になりそう。</p>
<blockquote>
<p><a href="http://qiita.com/59naga/items/d3082516c2a365b47985" target="_blank" >bouncyを使ったNodejsのみのバーチャルホスト</a></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>一つのドメインで複数のnodeアプリを起動させたい。</p>
<p>http-proxy使えばできそうである。</p>
<blockquote>
<p><a href="https://github.com/nodejitsu/node-http-proxy" target]]>
    </summary>
    
      <category term="Node.js" scheme="http://log.playr.jp/tags/Node-js/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Redis環境を構築(Windows7)]]></title>
    <link href="http://log.playr.jp/2015/05/16/Redis%E7%92%B0%E5%A2%83%E3%82%92%E6%A7%8B%E7%AF%89-Windows7/"/>
    <id>http://log.playr.jp/2015/05/16/Redis環境を構築-Windows7/</id>
    <published>2015-05-16T11:58:17.000Z</published>
    <updated>2015-10-03T07:52:16.000Z</updated>
    <content type="html"><![CDATA[<p>PCへRedisをインストールした。</p>
<p><a href="http://redis.io/" target="_blank" >Redis.io</a>のダウンロードページ下、Other versionsからWindows版を配布しているリポジトリへ。</p>
<blockquote>
<p><a href="https://github.com/MSOpenTech/redis" target="_blank" >MSOpenTech/redis</a></p>
</blockquote>
<p>バージョンは2.8.19.1。<br>ダウンロードしてインストーラーを起動、あとは普通に完了したっぽい。</p>
<hr>
<p>上記方法ではどうやら失敗したもよう・・・。</p>
<blockquote>
<p><a href="http://kakakikikeke.blogspot.jp/2014/07/windows7redis.html" target="_blank" >Windows7にredisをインストールしてみた </a></p>
</blockquote>
<p>↑の記事を参考にしこんどこそ成功。</p>
<p>原因は、まぁ気にせずいこう・・・。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>PCへRedisをインストールした。</p>
<p><a href="http://redis.io/" target="_blank" >Redis.io</a>のダウンロードページ下、Other versionsからWindows版を配布しているリポジトリへ。</p>
]]>
    </summary>
    
      <category term="Redis" scheme="http://log.playr.jp/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[npmのたまに使うコマンド]]></title>
    <link href="http://log.playr.jp/2015/04/12/npm%E3%81%AE%E3%81%9F%E3%81%BE%E3%81%AB%E4%BD%BF%E3%81%86%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89/"/>
    <id>http://log.playr.jp/2015/04/12/npmのたまに使うコマンド/</id>
    <published>2015-04-12T11:09:16.000Z</published>
    <updated>2015-10-03T07:52:46.000Z</updated>
    <content type="html"><![CDATA[<p>よく使うコマンドは覚えてるんだけど、たまに使うコマンドは忘れちゃって毎回ググってる気がするのでメモ。</p>
<p>バージョン確認</p>
<figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">npm</span> -v</span><br></pre></td></tr></table></figure>
<p>npm自身のアップデート</p>
<figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">npm</span> i -g <span class="built_in">npm</span></span><br></pre></td></tr></table></figure>
<p>パッケージをアインインストール</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="operator"><span class="keyword">uninstall</span> &lt;<span class="keyword">package</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>パッケージの更新情報を確認</p>
<figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">npm</span> outdated</span><br></pre></td></tr></table></figure>
<p>dependenciesだけインストール</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="tag">i</span> --production</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>よく使うコマンドは覚えてるんだけど、たまに使うコマンドは忘れちゃって毎回ググってる気がするのでメモ。</p>
<p>バージョン確認</p>
<figure class="highlight coffeescript"><table><tr><td class="gutter]]>
    </summary>
    
      <category term="Node.js" scheme="http://log.playr.jp/tags/Node-js/"/>
    
      <category term="npm" scheme="http://log.playr.jp/tags/npm/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[iojsをインストールしてみた]]></title>
    <link href="http://log.playr.jp/2015/01/15/iojs%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%97%E3%81%A6%E3%81%BF%E3%81%9F/"/>
    <id>http://log.playr.jp/2015/01/15/iojsをインストールしてみた/</id>
    <published>2015-01-15T14:09:16.000Z</published>
    <updated>2015-11-14T15:49:27.696Z</updated>
    <content type="html"><![CDATA[<p><amp-img src="/2015/01/15/iojsをインストールしてみた/1.png" width="400" height="229"></amp-img></p>
<p>昨日ついにnode.jsのファークであるio.jsがリリースされましたね。</p>
<p><a href="https://iojs.org/" target="_blank" >io.js - JavaScript I/O:</a></p>
<p>Koaで色々やろうと考えている僕としてはある程度動向を知っておく必要があるため、早速ローカル環境へインストールし、既存のコードが動作するかまで確認を行いました。</p>
<h2 id="io-jsのインストール">io.jsのインストール</h2><p>普通にインストーラーから…</p>
<p><amp-img src="/2015/01/15/iojsをインストールしてみた/2.png" width="400" height="229"></amp-img></p>
<p>おお～、普通にインストールできた。なにか新鮮である！</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ iojs -v</span><br></pre></td></tr></table></figure>
<p>でインストールを確認。<code>v1.0.1</code>が返ってきました！</p>
<h2 id="モジュールを確認">モジュールを確認</h2><p>現時点ではほぼ問題ないと思いますが、常用モジュールは動向を確認しておきたいですよね。</p>
<h3 id="Koa">Koa</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ iojs app.js</span><br></pre></td></tr></table></figure>
<p><code>--harmony</code> オプションなしでKoaが動く！</p>
<p>もちろんKoaチームもiojs対応の方向へ進んでいるっぽい。</p>
<h3 id="nodemon">nodemon</h3><p><a href="http://nodemon.io/" target="_blank" >nodemon</a> は <code>nodemon.json</code> を配置し <code>execMap</code> を記述すれば問題なく動作するようです。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"execMap"</span>: &#123;</span><br><span class="line">    <span class="string">"js"</span>: <span class="string">"iojs"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>随時チェックしていきたいです！</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><amp-img src="/2015/01/15/iojsをインストールしてみた/1.png" width="400" height="229"></amp-img></p>
<p>昨日ついにnode.jsのファークであるio.jsがリリースされましたね。</p>
<p>]]>
    </summary>
    
      <category term="Node.js" scheme="http://log.playr.jp/tags/Node-js/"/>
    
      <category term="io.js" scheme="http://log.playr.jp/tags/io-js/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ブログをHEXOへ引越し]]></title>
    <link href="http://log.playr.jp/2015/01/03/%E3%83%96%E3%83%AD%E3%82%B0%E3%82%92HEXO%E3%81%B8%E5%BC%95%E8%B6%8A%E3%81%97/"/>
    <id>http://log.playr.jp/2015/01/03/ブログをHEXOへ引越し/</id>
    <published>2015-01-03T13:33:56.000Z</published>
    <updated>2015-11-14T15:49:17.720Z</updated>
    <content type="html"><![CDATA[<p>新年だしでブログを<a href="http://hexo.io/" target="_blank" >HEXO</a>へ引越ししました。  </p>
<p>てぃーだブログで転がしていたブログの蘇生計画のひとつです.</p>
<h2 id="HEXO">HEXO</h2><p>読みはヘクソ。<br>いわゆる静的サイトジェネレーターの一つ。  </p>
<p>JekyllやOctopressのnode版といった感じ。</p>
<p>おもな特徴は…  </p>
<ul>
<li>ビルド、デプロイはコマンドからでオケ</li>
<li>マークダウンをサポートしているのでプログラマライク</li>
<li>豊富なプラグイン</li>
<li>豊富なテーマ</li>
</ul>
<p>といったところ。<br>テーマの自作も標準でEJSを採用しているので、シンプルに書ける。<br>制作者が台湾の方でユーザーにも中国圏の方が多いのか、プラグインやテーマに中国語がちょくちょく。基本的にゃ問題なく使えます。</p>
<h3 id="インストール">インストール</h3><p>インストールはnpmから</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo -g</span><br></pre></td></tr></table></figure>
<p>ジェネレーターでベースを一発生成。  </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init &lt;フォルダ&gt;</span><br></pre></td></tr></table></figure>
<p>生成されたプロジェクトに移動して <code>npm install</code>  </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> &lt;フォルダ&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure>
<p>あとは<code>hexo server</code>でローカルサーバーが立ち上がり、<code>http://localhost:4000</code>にブログが立ち上がります。  </p>
<h3 id="デプロイ">デプロイ</h3><p>今回はGithub Pages上に導入したので、<code>_config.yml</code>の<code>deplpy:</code>部分を修正。</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: http://hexo.io/docs/deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type: github</span><br><span class="line">  repo: https://github.com/<span class="tag">&lt;<span class="title">プロジェクト</span>&gt;</span>/<span class="tag">&lt;<span class="title">プロジェクト</span>&gt;</span>.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>
<p>generateコマンドでアップロードする性的サイトを生成して、  </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>deployコマンドでデプロイ。  </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>generateコマンドは-gオプションとしてデプロイと同時に行うことも可能。  </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy -g</span><br></pre></td></tr></table></figure>
<p>こっちの方が使うとこが多いかと。</p>
<h3 id="記事投稿">記事投稿</h3><p>newコマンドでひな形を生成。  </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new &lt;記事タイトル&gt;</span><br></pre></td></tr></table></figure>
<p><code>source/_posts/</code>内に生成されたひな形へマークダウンで内容を記述。</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">title: 記事タイトル</span><br><span class="line">date: 2015-01-01 00:00:00</span><br><span class="line">tags:</span><br><span class="line">---</span><br><span class="line">以下内容を書き込む</span><br></pre></td></tr></table></figure>
<p>そしてデプロイ  </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy -g</span><br></pre></td></tr></table></figure>
<h3 id="プラグイン">プラグイン</h3><p><a href="https://github.com/hexojs/hexo/wiki/Plugins" target="_blank" >プラグイン一覧</a>  </p>
<p>プラグインもnpm からインストール。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install &lt;プラグイン名&gt; --save</span><br></pre></td></tr></table></figure>
<p>以下導入したプラグイン</p>
<ul>
<li><a href="https://github.com/hexojs/hexo-generator-feed" target="_blank" >hexo-generator-feed</a> 公式。Atomを生成  </li>
<li><a href="https://github.com/hexojs/hexo-generator-sitemap" target="_blank" >hexo-generator-sitemap</a> 公式。サイトマップを生成  </li>
<li><a href="https://github.com/coneycode/hexo-generator-baidu-sitemap" target="_blank" >hexo-generator-baidu-sitemap</a> Baidu用サイトマップを生成。こーゆーのは面白そうなので導入</li>
<li><a href="https://github.com/flerro/hexo-generator-minify" target="_blank" >hexo-generator-minify</a> <code>hexo gm</code>コマンドでCSSとJsをMinifyして生成。速度厨なので導入</li>
</ul>
<h3 id="テーマ">テーマ</h3><p><a href="https://github.com/hexojs/hexo/wiki/Themes" target="_blank" >テーマ一覧</a>  </p>
<p>テーマはgitからインストール。  </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> &lt;リポジトリ&gt; themes/&lt;テーマ名&gt;</span><br></pre></td></tr></table></figure>
<p>公式テーマはデフォルトのLandscapeを含めて三つ容易されています。  </p>
<ul>
<li><a href="https://github.com/hexojs/hexo-theme-landscape" target="_blank" >Landscape</a> - <a href="http://hexo.io/hexo-theme-landscape/" target="_blank" >デモ</a></li>
<li><a href="https://github.com/hexojs/hexo-theme-phase" target="_blank" >Phase</a> - <a href="http://hexo.io/hexo-theme-phase/" target="_blank" >デモ</a></li>
<li><a href="https://github.com/hexojs/hexo-theme-light" target="_blank" >Light</a> - <a href="http://hexo.io/hexo-theme-light/" target="_blank" >デモ</a></li>
</ul>
<p>今回は日本製のApolloを採用。</p>
<ul>
<li><a href="https://github.com/joyceim/hexo-theme-apollo" target="_blank" >Apollo</a> - <a href="http://xxxxxly.in/hexo-theme-apollo/" target="_blank" >デモ</a></li>
</ul>
<h2 id="まとめ">まとめ</h2><p>かなり容易にブログ環境を構築できました。<br>マークダウンでGistにためたネタを投稿しやすいのでウハウハ。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>新年だしでブログを<a href="http://hexo.io/" target="_blank" >HEXO</a>へ引越ししました。  </p>
<p>てぃーだブログで転がしていたブログの蘇生計画のひとつです.</p>
<h2 id="HEXO">HEXO</h2><]]>
    </summary>
    
      <category term="hexo" scheme="http://log.playr.jp/tags/hexo/"/>
    
  </entry>
  
</feed>
